name: Deploy Project to App Engine

on:
  push:
    branches:
      - main

  # run the workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # test:
  #   name: Test and Sonarqube
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository code
  #       uses: actions/checkout@v4

  #     - name: Install Java 17
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: "temurin"
  #         java-version: "17"

  #     - name: Test and analyze
  #       run: ./gradlew test jacocoTestReport sonar
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    # needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      # Database todo update to prod vars
#      - name: Set database password
#        run: echo "dbPassword=${{ secrets.DB_PASSWORD_DEV }}" > dbpassword.properties

#      - name: Set database URL to dev GCP
#        run: echo "dbURL=${{ secrets.DB_URL_DEV }}" > dburl.properties

      # add password from secret to app.yaml
      - name: Add database passwrod to app.yaml
        run: |
          echo "env_variables:" >> app.yaml
          echo "  dbPassword: ${{ secrets.DB_PASSWORD_DEV }}" >> app.yaml
          cat app.yaml

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          deliverables: app.yaml
          version: v1
          credentials: ${{ secrets.GCP_SERVICE_CREDENTIALS }}
        # Database todo update to dev
        env:
#          SPRING_PROFILES_ACTIVE: prod
#          GRADLE_OPTS: '-DdbPassword=${{ secrets.DB_PASSWORD_DEV }} -DdbURL=${{ secrets.DB_URL_DEV }}'
          GRADLE_OPTS: '-DdbPassword=${{ secrets.DB_PASSWORD_DEV }}'

      - name: Test
        run: |
          response=$(curl -s "${{ steps.deploy.outputs.url }}")
          echo "::set-output name=response::$response"
          [[ "$response" == *"Service Unavailable"* ]] && exit 1
