name: Deploy Project to App Engine

on:
  push:
    branches:
      - main

  # run the workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: Test a last time with dev profile
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
     - uses: actions/checkout@v3
       with:
         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
         java-version: 17
         distribution: 'zulu' # Alternative distribution options are available

     - name: Add database variables to application properties
       run: |
         echo "spring.datasource.url=jdbc:postgresql://localhost:5432/test_db" >> src/main/resources/application.properties
         echo "spring.datasource.password=test_password" >> src/main/resources/application.properties
         cat src/main/resources/application.properties

     - name: Test and analyze (no env variables)
       run: ./gradlew build
       env:
          PUSHER_APP_ID: 1787826
          PUSHER_KEY: ${{ secrets.PUSHER_KEY }}
          PUSHER_SECRET: ${{ secrets.PUSHER_SECRET }}

  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Add database variables to application properties
        run: |
          echo "spring.datasource.url=${{ secrets.DB_URL_DEV }}" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.DB_PASSWORD_DEV }}" >> src/main/resources/application.properties

      - name: Add pusher credentials
        run: |
          echo "  PUSHER_KEY={{ secrets.PUSHER_KEY }}" >> app.yaml
          echo "  PUSHER_SECRET={{ secrets.PUSHER_SECRET }}" >> app.yaml

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          deliverables: app.yaml
          version: v1
          credentials: ${{ secrets.GCP_SERVICE_CREDENTIALS }}

      - name: Test
        run: |
          response=$(curl "${{ steps.deploy.outputs.url }}")
          echo $response
          if [[ "$response" == *"Service Unavailable"* ]]; then exit 1; else echo "App is up and running"; fi
