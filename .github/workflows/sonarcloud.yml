name: SonarCloud
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze on Sonarcloud
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Set database password
        run: echo "dbPassword=test_password" > dbpassword.properties

      - name: Set database URL to dev GCP
        run: echo "dbUrl=jdbc:postgresql://localhost:5432/test_db" > dburl.properties

      - name: Test and analyze with sonarcloud
        run: ./gradlew test sonar --info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GRADLE_OPTS: '-DdbPassword=test_password -DdbUrl=jdbc:postgresql://localhost:5432/test_db'
#          dbUrl: jdbc:postgresql://localhost:5432/test_db
#          dbPassword: test_password

      - name: Build and analyze with sonarcloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          dbUrl: jdbc:postgresql://localhost:5432/test_db
          dbPassword: test_password
#          DB_UNM: test_user
#          DB_DDL_AUTO: create
        run: ./gradlew build sonar --info
